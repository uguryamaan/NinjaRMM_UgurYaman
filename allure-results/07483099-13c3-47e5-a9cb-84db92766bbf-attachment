# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify Successful Login with a Valid Username and Password 
- Location: /Users/ugur/Downloads/ninjaarmmugur/tests/TC_Login_003.spec.ts:12:1

# Error details

```
Error: expect(received).toContain(expected) // indexOf

Expected substring: "/mfa"
Received string:    "https://app.ninjarmm.com/auth/#/login/"
    at /Users/ugur/Downloads/ninjaarmmugur/tests/TC_Login_003.spec.ts:30:24
```

# Test source

```ts
   1 | import { test, expect } from '../fixtures/ui-fixture';
   2 | import DataManager from '../env/dataManager';
   3 |
   4 | /**
   5 |  * Test case: Verify successful login with valid credentials and MFA redirection
   6 |  * Steps:
   7 |  * 1. Navigate to login page
   8 |  * 2. Enter valid email and password
   9 |  * 3. Click Sign In button
  10 |  * 4. Verify redirection to MFA page
  11 |  */
  12 | test('Verify Successful Login with a Valid Username and Password ', async ({ pageManager }) => {
  13 |     // 1. Navigate to login page
  14 |     await pageManager.getLoginPage().loadPage();
  15 |     await expect(pageManager.getLoginPage().getLoginForm()).toBeVisible();
  16 |
  17 |     // 2. Enter valid email and valid password
  18 |     const loginBody = DataManager.testData.getValidLoginBody();
  19 |     console.log('Login attempt with valid email:', loginBody.getEmail());
  20 |     await pageManager.getLoginPage().fillLoginForm(loginBody);
  21 |
  22 |     // 3. Click "Sign In" button
  23 |     await pageManager.getLoginPage().clickSignInButton();
  24 |
  25 |     // 4. Wait for page load
  26 |     await pageManager.getPage().waitForLoadState('networkidle');
  27 |
  28 |     // 5. Verify redirection to MFA page
  29 |     const currentUrl = await pageManager.getLoginPage().getCurrentUrl();
> 30 |     expect(currentUrl).toContain("/mfa");
     |                        ^ Error: expect(received).toContain(expected) // indexOf
  31 | });
```